<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="6" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="22828" started-at="2020-01-12T21:44:08 IST" finished-at="2020-01-12T21:44:31 IST">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.ParallelFeatureRunners@69a3d1d]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Test" duration-ms="22828" started-at="2020-01-12T21:44:08 IST" finished-at="2020-01-12T21:44:31 IST">
      <class name="runners.ParallelFeatureRunners">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:runners.ParallelFeatureRunners@69a3d1d]" name="beforeSuite" is-config="true" duration-ms="12" started-at="2020-01-12T21:44:08 IST" finished-at="2020-01-12T21:44:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:runners.ParallelFeatureRunners@69a3d1d]" name="setUpClass" is-config="true" duration-ms="95" started-at="2020-01-12T21:44:08 IST" finished-at="2020-01-12T21:44:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.ParallelFeatureRunners@69a3d1d]" name="runScenario" duration-ms="11751" started-at="2020-01-12T21:44:08 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-01-12T21:44:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["To test sample scenario2"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Sample feature 2"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.ParallelFeatureRunners@69a3d1d]" name="runScenario" duration-ms="12188" started-at="2020-01-12T21:44:08 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-01-12T21:44:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["To test sample scenario1"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Sample feature 1"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.ParallelFeatureRunners@69a3d1d]" name="runScenario" duration-ms="11978" started-at="2020-01-12T21:44:08 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-01-12T21:44:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["To test sample scenario 3"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Sample feature 3"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.ParallelFeatureRunners@69a3d1d]" name="runScenario" duration-ms="10806" started-at="2020-01-12T21:44:20 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-01-12T21:44:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["To test sample scenario 4"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Sample feature 4"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.ParallelFeatureRunners@69a3d1d]" name="runScenario" duration-ms="10585" started-at="2020-01-12T21:44:20 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-01-12T21:44:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["To test sample scenario 5"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Sample feature 5"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="test()[pri:0, instance:runners.ParallelFeatureRunners@69a3d1d]" name="test" duration-ms="1" started-at="2020-01-12T21:44:31 IST" finished-at="2020-01-12T21:44:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:runners.ParallelFeatureRunners@69a3d1d]" name="tearDownClass" is-config="true" duration-ms="1" started-at="2020-01-12T21:44:31 IST" finished-at="2020-01-12T21:44:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:runners.ParallelFeatureRunners@69a3d1d]" name="afterSuite" is-config="true" duration-ms="0" started-at="2020-01-12T21:44:31 IST" finished-at="2020-01-12T21:44:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- runners.ParallelFeatureRunners -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
